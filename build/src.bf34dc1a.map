{"version":3,"sources":["../node_modules/hyperapp/src/index.js","utils/generate-uuid.js","actions/add-todo.js","actions/remove-todo.js","actions/toggle-todo.js","actions/edit-todo.js","actions/index.js","utils/local-storage.js","state/index.js","views/header-view.js","views/remove-button.js","views/toggle-button.js","views/todo-item.js","views/todo-list.js","views/todo-input.js","views/todo-list-done.js","views/state-display.js","views/index.js","index.js"],"names":["h","name","attributes","length","rest","children","arguments","push","node","pop","key","app","state","actions","view","container","map","skipRender","rootElement","oldNode","recycleElement","element","nodeName","toLowerCase","call","childNodes","nodeType","nodeValue","lifecycle","isRecycling","globalState","clone","wiredActions","wireStateToActions","path","action","data","result","getPartialState","then","setPartialState","concat","scheduleRender","resolveNode","render","patch","parent","isSvg","newElement","createElement","document","createTextNode","createElementNS","oncreate","i","appendChild","insertBefore","updateElement","oldAttributes","cb","onupdate","oldKeyed","newKeyed","oldElements","oldChildren","oldKey","getKey","k","newKey","keyedNode","target","source","out","value","slice","eventListener","event","currentTarget","events","type","updateAttribute","oldValue","style","setProperty","addEventListener","removeEventListener","setAttribute","removeAttribute","removeElement","done","removeChild","removeChildren","ondestroy","onremove","generateUUID","replace","Math","random","toString","addTodo","todos","input","removeTodo","e","filter","dataset","uuid","t","id","toggleTodo","Object","assign","editTodo","textContent","preventDefault","blur","storeStateInStorage","getStateFromStorage","JSON","parse","window","localStorage","getItem","setItem","stringify","HeaderView","RemoveButton","remove","ToggleButton","toggle","TodoItem","todo","contentEditable","focus","keyCode","editEnter","edit","TodoList","TodoInput","placeholder","add","TodoListDone","StateDisplay","getElementById"],"mappings":"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","file":"src.bf34dc1a.map","sourceRoot":"../src","sourcesContent":["export function h(name, attributes) {\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    var node = rest.pop()\n    if (node && node.pop) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function app(state, actions, view, container) {\n  var map = [].map\n  var rootElement = (container && container.children[0]) || null\n  var oldNode = rootElement && recycleElement(rootElement)\n  var lifecycle = []\n  var skipRender\n  var isRecycling = true\n  var globalState = clone(state)\n  var wiredActions = wireStateToActions([], globalState, clone(actions))\n\n  scheduleRender()\n\n  return wiredActions\n\n  function recycleElement(element) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : recycleElement(element)\n      })\n    }\n  }\n\n  function resolveNode(node) {\n    return typeof node === \"function\"\n      ? resolveNode(node(globalState, wiredActions))\n      : node != null\n        ? node\n        : \"\"\n  }\n\n  function render() {\n    skipRender = !skipRender\n\n    var node = resolveNode(view)\n\n    if (container && !skipRender) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = node))\n    }\n\n    isRecycling = false\n\n    while (lifecycle.length) lifecycle.pop()()\n  }\n\n  function scheduleRender() {\n    if (!skipRender) {\n      skipRender = true\n      setTimeout(render)\n    }\n  }\n\n  function clone(target, source) {\n    var out = {}\n\n    for (var i in target) out[i] = target[i]\n    for (var i in source) out[i] = source[i]\n\n    return out\n  }\n\n  function setPartialState(path, value, source) {\n    var target = {}\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1\n          ? setPartialState(path.slice(1), value, source[path[0]])\n          : value\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function getPartialState(path, source) {\n    var i = 0\n    while (i < path.length) {\n      source = source[path[i++]]\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              var result = action(data)\n\n              if (typeof result === \"function\") {\n                result = result(getPartialState(path, globalState), actions)\n              }\n\n              if (\n                result &&\n                result !== (state = getPartialState(path, globalState)) &&\n                !result.then // !isPromise\n              ) {\n                scheduleRender(\n                  (globalState = setPartialState(\n                    path,\n                    clone(state, result),\n                    globalState\n                  ))\n                )\n              }\n\n              return result\n            }\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = clone(state[key])),\n            (actions[key] = clone(actions[key]))\n          )\n    }\n\n    return actions\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function eventListener(event) {\n    return event.currentTarget.events[event.type](event)\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSvg) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      for (var i in clone(oldValue, value)) {\n        var style = value == null || value[i] == null ? \"\" : value[i]\n        if (i[0] === \"-\") {\n          element[name].setProperty(i, style)\n        } else {\n          element[name][i] = style\n        }\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        name = name.slice(2)\n\n        if (element.events) {\n          if (!oldValue) oldValue = element.events[name]\n        } else {\n          element.events = {}\n        }\n\n        element.events[name] = value\n\n        if (value) {\n          if (!oldValue) {\n            element.addEventListener(name, eventListener)\n          }\n        } else {\n          element.removeEventListener(name, eventListener)\n        }\n      } else if (\n        name in element &&\n        name !== \"list\" &&\n        name !== \"type\" &&\n        name !== \"draggable\" &&\n        name !== \"spellcheck\" &&\n        name !== \"translate\" &&\n        !isSvg\n      ) {\n        element[name] = value == null ? \"\" : value\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value)\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name)\n      }\n    }\n  }\n\n  function createElement(node, isSvg) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSvg = isSvg || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName)\n\n    var attributes = node.attributes\n    if (attributes) {\n      if (attributes.oncreate) {\n        lifecycle.push(function() {\n          attributes.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(\n          createElement(\n            (node.children[i] = resolveNode(node.children[i])),\n            isSvg\n          )\n        )\n      }\n\n      for (var name in attributes) {\n        updateAttribute(element, name, attributes[name], null, isSvg)\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldAttributes, attributes, isSvg) {\n    for (var name in clone(oldAttributes, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldAttributes[name])\n      ) {\n        updateAttribute(\n          element,\n          name,\n          attributes[name],\n          oldAttributes[name],\n          isSvg\n        )\n      }\n    }\n\n    var cb = isRecycling ? attributes.oncreate : attributes.onupdate\n    if (cb) {\n      lifecycle.push(function() {\n        cb(element, oldAttributes)\n      })\n    }\n  }\n\n  function removeChildren(element, node) {\n    var attributes = node.attributes\n    if (attributes) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i])\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element)\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node) {\n    function done() {\n      parent.removeChild(removeChildren(element, node))\n    }\n\n    var cb = node.attributes && node.attributes.onremove\n    if (cb) {\n      cb(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSvg) {\n    if (node === oldNode) {\n    } else if (oldNode == null || oldNode.nodeName !== node.nodeName) {\n      var newElement = createElement(node, isSvg)\n      parent.insertBefore(newElement, element)\n\n      if (oldNode != null) {\n        removeElement(parent, element, oldNode)\n      }\n\n      element = newElement\n    } else if (oldNode.nodeName == null) {\n      element.nodeValue = node\n    } else {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSvg = isSvg || node.nodeName === \"svg\")\n      )\n\n      var oldKeyed = {}\n      var newKeyed = {}\n      var oldElements = []\n      var oldChildren = oldNode.children\n      var children = node.children\n\n      for (var i = 0; i < oldChildren.length; i++) {\n        oldElements[i] = element.childNodes[i]\n\n        var oldKey = getKey(oldChildren[i])\n        if (oldKey != null) {\n          oldKeyed[oldKey] = [oldElements[i], oldChildren[i]]\n        }\n      }\n\n      var i = 0\n      var k = 0\n\n      while (k < children.length) {\n        var oldKey = getKey(oldChildren[i])\n        var newKey = getKey((children[k] = resolveNode(children[k])))\n\n        if (newKeyed[oldKey]) {\n          i++\n          continue\n        }\n\n        if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\n          if (oldKey == null) {\n            removeElement(element, oldElements[i], oldChildren[i])\n          }\n          i++\n          continue\n        }\n\n        if (newKey == null || isRecycling) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChildren[i], children[k], isSvg)\n            k++\n          }\n          i++\n        } else {\n          var keyedNode = oldKeyed[newKey] || []\n\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], children[k], isSvg)\n            i++\n          } else if (keyedNode[0]) {\n            patch(\n              element,\n              element.insertBefore(keyedNode[0], oldElements[i]),\n              keyedNode[1],\n              children[k],\n              isSvg\n            )\n          } else {\n            patch(element, oldElements[i], null, children[k], isSvg)\n          }\n\n          newKeyed[newKey] = children[k]\n          k++\n        }\n      }\n\n      while (i < oldChildren.length) {\n        if (getKey(oldChildren[i]) == null) {\n          removeElement(element, oldElements[i], oldChildren[i])\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[i]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n        }\n      }\n    }\n    return element\n  }\n}\n","export const generateUUID = () =>\n  ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11)\n    .replace(/1|0/g, function () {\n      return (0 | Math.random() * 16)\n        .toString(16)\n    })\n","import { generateUUID } from '../utils/generate-uuid'\n\nexport const addTodo = (state) => state.todos.concat({\n  done: false,\n  id: generateUUID(),\n  value: state.input\n})\n","export const removeTodo = (state, e) =>\n  state.todos.filter(t => e.target.dataset.uuid !== t.id)\n","export const toggleTodo = (state, e) =>\n  state.todos.map(t => e.target.dataset.uuid === t.id ? Object.assign({}, t, {\n    done: !t.done\n  }) : t)\n","export const editTodo = (state, e) =>\n  state.todos.map(t => e.target.dataset.uuid === t.id ? Object.assign({}, t, {\n    value: e.target.textContent\n  }) : t)\n","import { addTodo } from './add-todo'\nimport { removeTodo } from './remove-todo'\nimport { toggleTodo } from './toggle-todo'\nimport { editTodo } from './edit-todo'\n\nexport const actions = {\n  add: () => state => ({\n    input: '',\n    todos: addTodo(state)\n  }),\n  input: (value) => state => ({\n    input: value\n  }),\n  remove: (e) => state => ({\n    todos: removeTodo(state, e)\n  }),\n  toggle: (e) => state => ({\n    todos: toggleTodo(state, e)\n  }),\n  edit: (e) => state => ({\n    todos: editTodo(state, e)\n  }),\n  editEnter: (e) => state => {\n    e.preventDefault()\n    e.target.blur()\n  }\n}\n","const getStateFromStorage = () =>\n  JSON.parse(window.localStorage.getItem('todoapp'))\n\nconst storeStateInStorage = (state) =>\n  window.localStorage.setItem('todoapp', JSON.stringify(state))\n\nexport { getStateFromStorage, storeStateInStorage }\n","import { getStateFromStorage } from '../utils/local-storage'\n\nexport const state = getStateFromStorage() || {\n  input: '',\n  placeholder: 'Add new todo',\n  todos: []\n}\n","/* eslint-disable no-unused-vars */\nimport { h } from 'hyperapp'\n\nexport const HeaderView = () => (\n  <header>\n    <h2>todo</h2>\n    <p>\n      <em>\n        <small>tap text to edit todo\n        </small>\n      </em>\n      <a href='https://github.com/marcusasplund/hyperapp-todo-parcel/'>{' '}\n        <small>source\n        </small>\n      </a>\n    </p>\n  </header>\n)\n","/* eslint-disable no-unused-vars */\nimport { h } from 'hyperapp'\n\nexport const RemoveButton = ({ id, actions }) => (\n  <button\n    aria-label='Remove'\n    class='button button-small button-outline'\n    data-uuid={id}\n    onclick={actions.remove}>x\n  </button>\n)\n","/* eslint-disable no-unused-vars */\nimport { h } from 'hyperapp'\n\nexport const ToggleButton = ({ id, actions }) => (\n  <button\n    aria-label='Toggle'\n    class='button button-small button-outline'\n    data-uuid={id}\n    onclick={actions.toggle}>✓\n  </button>\n)\n","/* eslint-disable no-unused-vars */\nimport { h } from 'hyperapp'\nimport { RemoveButton } from './remove-button'\nimport { ToggleButton } from './toggle-button'\n\nexport const TodoItem = ({ actions, todo }) => (\n  <div class='item row'>\n    <div class='left'>\n      <RemoveButton actions={actions} id={todo.id} />\n      <ToggleButton actions={actions} id={todo.id} />\n    </div>\n    <div\n      class={todo.done ? 'done right' : 'right'}\n      // Prevent extra <div> elements inserted in contenteditable\n      onclick={e => {\n        if (!todo.done) {\n          e.target.contentEditable = true\n          e.target.focus()\n        }\n      }\n      }\n      onkeydown={e => {\n        if (e.keyCode === 13) {\n          e.target.contentEditable = false\n          actions.editEnter(e)\n        }\n      }\n      }\n      data-uuid={todo.id}\n      oninput={e => (todo.value = e.target.textContent || '')}\n      onblur={e => actions.edit(e)}>\n      {todo.value}\n    </div>\n  </div>\n)\n","/* eslint-disable no-unused-vars */\nimport { h } from 'hyperapp'\nimport { TodoItem } from './todo-item'\n\nexport const TodoList = ({ state, actions }) => (\n  state.todos\n    .filter(todo => !todo.done)\n    .map(todo => <TodoItem todo={todo} actions={actions} />)\n)\n","/* eslint-disable no-unused-vars */\nimport { h } from 'hyperapp'\n\nexport const TodoInput = ({ state, actions }) => (\n  <div class='row'>\n    <input\n      oncreate={element => element.focus()}\n      type='text'\n      aria-label={state.placeholder}\n      onkeyup={({ target: { value }, keyCode }) => keyCode === 13 && value !== '' ? actions.add() : null}\n      oninput={({ target: { value } }) => actions.input(value)}\n      value={state.input}\n      placeholder={state.placeholder} />\n  </div>\n)\n","/* eslint-disable no-unused-vars */\nimport { h } from 'hyperapp'\nimport { TodoItem } from './todo-item'\n\nexport const TodoListDone = ({ state, actions }) => (\n  state.todos\n    .filter(todo => todo.done)\n    .map(todo => <TodoItem todo={todo} actions={actions} />)\n)\n","/* eslint-disable no-unused-vars */\nimport { h } from 'hyperapp'\nimport { storeStateInStorage } from '../utils/local-storage'\n\nexport const StateDisplay = ({ state }) => (\n  <pre>\n    <code onupdate={storeStateInStorage(state)}>\n      {JSON.stringify(state, null, 2)}\n    </code>\n  </pre>\n)\n","/* eslint-disable no-unused-vars */\nimport { h } from 'hyperapp'\nimport { HeaderView } from './header-view'\nimport { TodoList } from './todo-list'\nimport { TodoInput } from './todo-input'\nimport { TodoListDone } from './todo-list-done'\nimport { StateDisplay } from './state-display'\n\nexport const view = (state, actions) => (\n  <div class='container'>\n    <HeaderView />\n    <TodoList state={state} actions={actions} />\n    <TodoInput state={state} actions={actions} />\n    <TodoListDone state={state} actions={actions} />\n    <StateDisplay state={state} />\n  </div>\n)\n","import { app } from 'hyperapp'\nimport { actions } from './actions/'\nimport { state } from './state/'\nimport { view } from './views/'\nimport './styles/app.scss'\n\napp(state, actions, view, document.getElementById('todo'))\n"]}